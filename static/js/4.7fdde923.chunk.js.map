{"version":3,"sources":["shell/components/Header.js","config.js","store/actions/StoriesListAction.js","modules/stories/components/Story.js","modules/stories/containers/Stories.js","shell/components/Content.js","shell/components/Footer.js","shell/containers/Shell.js"],"names":["Header","props","className","type","placeholder","onChange","event","onSearchText","target","value","icon","faSearch","color","size","API","newsItems","getStoriesList","search","searchResults","onFail","msg","TYPES","onGetStoriesListSuccess","payload","onGetSearchResultsSuccess","Story","story","storyTitle","title","duration","Date","getFullYear","created_at","link","document","getElementById","searchText","length","includes","regEx","RegExp","result","match","modifiedTitle","resultLength","i","replace","paragraph","createElement","innerHTML","parentNode","replaceChild","href","id","points","author","children","num_comments","Stories","state","users","page","pageSize","loading","prevY","this","storiesList","getStories","observer","IntersectionObserver","handleObserver","bind","root","rootMargin","threshold","observe","loadingRef","entities","y","boundingClientRect","curPage","setState","loadingTextCSS","display","stories","isSearch","map","index","key","ref","style","height","margin","Component","connect","storiesListReducer","dispatch","fetch","then","response","status","json","data","catch","err","MainContent","Footer","Shell","text","tag","getSearchResults","undefined","nextProps","hits","cartItems","tags"],"mappings":"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","file":"static/js/4.7fdde923.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nconst Header = (props) => {\n\n    const searchText = (event) =>{\n        props.onSearchText(event.target.value);\n    }\n    \n    return (\n        <div className=\"header\">\n            {/* <img src={AppLogo} /> */}\n            {/* not able to find any suitable icon so making this with div */}\n            <div className=\"logo\">\n                H\n            </div>\n            \n            <div className=\"search-label-container\">\n                <label className=\"search-label\"> Search\n            </label>\n                <label className=\"search-label\"> Hacker News\n            </label>\n            </div>\n\n            <div className=\"header-content\">\n                <input className=\"search-text-input\" \n                type=\"text\" \n                placeholder=\"Search stories by title, url or author\" \n                onChange={searchText}/>\n\n                <button className=\"search-button\">\n                    <FontAwesomeIcon icon={faSearch} color=\"#ff742b\" size=\"1x\" />\n                </button>\n\n            </div>\n\n        </div>\n    )\n}\nexport default Header;","export const STORIES_LIST_URL = \"https://hn.algolia.com/api\";\n\nexport const API = {\n    newsItems: {\n    getStoriesList: `${STORIES_LIST_URL}/v1/items/`,\n  },\n  search: {\n    searchResults: `${STORIES_LIST_URL}/v1/`,\n  },\n};\n","import * as TYPES from '../types';\nimport { API } from '../../config';\n\nconst onFail = msg => ({\n    type: TYPES.ON_ERROR,\n    msg\n});\n\nconst onGetStoriesListSuccess = payload => {\n    return {\n        payload,\n        type: TYPES.GET_STORIES_LIST,\n    };\n};\n\nconst onGetSearchResultsSuccess = payload => {\n    return {\n        payload,\n        type: TYPES.GET_SEARCH_RESULTS,\n    };\n};\n\nexport const getStoriesList = (id = 1) => {\n    \n    return (dispatch) => {\n\n        fetch(`${API.newsItems.getStoriesList}${id}`\n        )\n            .then(\n                function (response) {\n                    if (response.status !== 200) {\n                        return;\n                    }\n                    response.json().then(function (data) {\n                        dispatch(onGetStoriesListSuccess(data));\n                    });\n                }\n            )\n            .catch(function (err) {\n                dispatch(onFail(err));\n            });\n    };\n\n}\n\nexport const getSearchResults = (text = '', tags='story') => {\n    \n    return (dispatch) => {\n\n        fetch(`${API.search.searchResults}?query=${text}&tags=${tags}`)\n            .then(\n                function (response) {\n                    if (response.status !== 200) {\n                        return;\n                    }\n                    response.json().then(function (data) {\n                        dispatch(onGetSearchResultsSuccess(data));\n                    });\n                }\n            )\n            .catch(function (err) {\n                dispatch(onFail(err));\n            });\n    };\n\n}\n\n","import React from 'react';\nimport '../styles/index.scss';\n\nconst Story = (props) => {\n    let story = props.story;\n    let storyTitle = props.story.title;\n    let duration = `${new Date(new Date().getFullYear() - props.story.created_at).getFullYear()} years back`;\n    let link = document.getElementById('storyTitle');\n\n    // needs to be improved - to highlight the selected text\n    if (props.searchText && props.searchText.length > 0 && storyTitle && storyTitle.includes(props.searchText)) {\n        if (link) {\n            let regEx = new RegExp(props.searchText, \"gi\");\n            let result = storyTitle.match(regEx);\n            let modifiedTitle = '';\n            let resultLength = result.length;\n            for (let i = 0; i < resultLength; i++) {\n                modifiedTitle = storyTitle.replace(result[i], `<em class=\"em\">${result[i]}</em>`)\n\n            }\n            let paragraph = document.createElement('p');\n            paragraph.innerHTML = modifiedTitle;\n            if (link.parentNode) {\n                link.parentNode.replaceChild(paragraph, link);\n            }\n        }\n    }\n\n    else if (link) {\n        link.innerHTML = storyTitle;\n    }\n    //\n\n\n    return (\n        <article className=\"story\">\n            <div className=\"story-container\">\n                <div className=\"story-data\">\n                    <div className=\"story-title\">\n                        <a href=\"https://news.ycombinator.com/item?id=16582136\" target=\"_blank\">\n                            <span id='storyTitle'>{story.title ? story.title : \" No Title Found\"}</span>\n                        </a>\n                        <a href=\"http://www.bbc.com/news/uk-43396008\" target=\"_blank\" className=\"story-link\">(http://www.bbc.com/news/uk-43396008)</a>\n                    </div>\n                    <div className=\"story-meta\">\n                        <span>\n                            <a href=\"https://news.ycombinator.com/item?id=16582136\" target=\"_blank\">{story.points} points</a>\n                        </span>\n                        ,<span className=\"story-separator\">|</span>\n                        <span>\n                            <a href=\"https://news.ycombinator.com/user?id=Cogito\" target=\"_blank\">\n                                <span>{story.author}</span>\n                            </a>\n                        </span>\n                        <span className=\"story-separator\">|</span>\n                        <span><a href=\"https://news.ycombinator.com/item?id=16582136\" target=\"_blank\">{duration}</a>\n                        </span>\n                        <span className=\"story-separator\">|</span>\n                        <span>\n                            <a href=\"https://news.ycombinator.com/item?id=16582136\" target=\"_blank\">{story.children ? story.children.length : story.num_comments} comments</a>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </article>\n    )\n}\nexport default Story;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getStoriesList } from '../../../store/actions/StoriesListAction';\n\nimport '../styles/index.scss';\nimport Story from '../components/Story';\n\nclass Stories extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: [],\n            page: 1,\n            pageSize: 10,\n            loading: false,\n            prevY: 0\n        };\n    }\n\n    componentDidMount() {\n        if(!this.props.storiesList || this.props.storiesList.length === 0){\n            this.getStories(this.state.page);\n        }\n        // handling infinite scroll\n        var options = {\n            root: null,\n            rootMargin: \"0px\",\n            threshold: 1.0\n        };\n        this.observer = new IntersectionObserver(\n            this.handleObserver.bind(this),\n            options\n        );\n        this.observer.observe(this.loadingRef);\n        ///\n    }\n\n    // method which enables infinite page scroll\n    handleObserver(entities, observer) {\n        const y = entities[0].boundingClientRect.y;\n        if (this.state.prevY > y) {\n            const lastStory = this.props.storiesList[this.props.storiesList.length - 1];\n            const curPage = lastStory.id;\n            this.getStories(curPage);\n            this.setState({ page: curPage });\n        }\n        this.setState({ prevY: y });\n    }\n\n    getStories(page) {\n        this.setState({ loading: true });\n        let pageSize = page + this.state.pageSize;\n\n        for (let i = page; i < pageSize; i++) {\n            this.props.getStoriesList(i);\n        }\n        this.setState({ page: pageSize });\n    }\n\n\n    render() {\n        const loadingCSS = {\n            height: \"100px\",\n            margin: \"30px\"\n        };\n        const loadingTextCSS = { display: this.state.loading ? \"block\" : \"none\" };\n        let stories = this.props.isSearch ? this.props.searchResults : this.props.storiesList;\n\n        return (\n            <div className=\"container\">\n                <div className=\"module_container\">\n                    {stories && stories.length > 0 &&\n                        stories.map((story, index) => {\n                            return (\n                                <Story key={story.author+index} story={story} searchText={this.props.searchText} />\n                            )\n                        })\n                    }\n\n                </div >\n                <div\n                    ref={loadingRef => (this.loadingRef = loadingRef)}\n                    style={loadingCSS}\n                >\n                    <span style={loadingTextCSS}>Loading...</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        storiesList: state.storiesListReducer && state.storiesListReducer.storiesList,\n    }\n}\nexport default connect(mapStateToProps, { getStoriesList })(Stories);\n","import React from 'react';\nimport Stories from '../../modules/stories/containers/Stories';\n\nconst MainContent = (props) => {\n    return (<div className=\"content\">\n        <Stories isSearch={props.isSearch}\n            searchText={props.searchText}\n            searchResults={props.searchResults} />\n    </div>)\n}\n\n\nexport default MainContent;\n\n","import React from 'react';\n\nconst Footer = (props) => {\n    return (\n        <div className=\"footer\">\n            <label>@copyright</label>\n        </div>\n    )\n}\nexport default Footer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport MainContent from '../components/Content';\nimport Footer from '../components/Footer';\nimport { getSearchResults } from '../../store/actions/StoriesListAction';\n\nimport '../styles/index.scss';\nimport 'antd/dist/antd.css';\n\nclass Shell extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { isSearch: false, searchResults: undefined };\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        if (this.props.searchResults !== nextProps.searchResults) {\n            if (this.state.searchText) {\n                this.setState({ isSearch: true, searchResults: nextProps.searchResults.hits })\n            }\n        }\n    }\n\n    // search handler\n    onSearchText = (text, tag = \"story\") => {\n        if (text.length > 0) {\n            this.props.getSearchResults(text, tag);\n            this.setState({ searchText: text })\n        }\n        else {\n            this.setState({ isSearch: false, searchText: null, searchResults: null });\n        }\n    }\n\n    render() {\n        return (<div className=\"shell\">\n            <Header cartItems={this.props.cartItems} onSearchText={this.onSearchText}/>\n            <div className=\"main_content\">\n                <MainContent searchResults={this.state.searchResults}\n                    isSearch={this.state.isSearch} searchText={this.state.searchText} />\n            </div>\n            <Footer />\n        </div >)\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        searchResults: state.storiesListReducer && state.storiesListReducer.searchResults\n    }\n}\nexport default connect(mapStateToProps, { getSearchResults })(Shell);"],"sourceRoot":""}